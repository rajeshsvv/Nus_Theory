python number can be- Python int, Python float, or even Python complex number. 
long is no longer supported by Python 3.x.

A number is an arithmetic entity that lets us measure something. 
Python allows us to store the integer, floating, and complex numbers and also lets us convert between them. 
Since Python is dynamically-typed, there is no need to specify the type of data for a variable. 


None- The None keyword indicates the absence of value.

More often than not, programmers need to deal with numbers other than decimal. To do this, you can use appropriate prefixes.

Number System		Prefix
Binary			0b or 0B
Octal			0o or 0O
Hexadecimal		0x or 0X

When you want to write a binary number, use the prefix 0b or 0B. 
For example, we know that the binary for 7 is 111.

>>> print(0b111)
7

You can also apply conversion functions on these numbers.

>>> int(0b10)
2

ii. Octal
The prefix for octal is 0o or 0O.

>>> print(0O10)
8

The following code causes an error. This is because the octal number system does not have the number 8. 
It has the numbers 0-7.

>>> print(0O8)
SyntaxError: invalid token

>>> float(0B10)
2.0

iii. Hexadecimal
The hexadecimal number system has numbers 0-9 and then A-F. For that, use the prefix 0x or 0X.

>>> print(0xFF)
255

>>> print(0xFE)
254

Like int(), float() can’t convert a complex either.

>>> float(3j)
Traceback (most recent call last):

File “<pyshell#26>”, line 1, in <module>

float(3j)

TypeError: can’t convert complex to float

>>> float(0o10)
8.0

9. The fractions Module
Another module that Python provides, the fractions module lets you deal with fractions. 
The Fraction() function returns the value in the form of numerator and denominator.

>>> from fractions import Fraction
>>> print(Fraction(1.5))
3/2

It can also take two arguments.

>>> print(Fraction(1,3))
1/3

10. The math Module
Another essential module is the math module. 
It has all important mathematical functions like exp, trigonometric functions, logarithmic functions, factorial, and more.

>>> import math
>>> math.factorial(5)
120

>>> math.exp(3)
20.085536923187668

>>> math.tan(90)


-1.995200412208242